package museumexhibition.ui.form.museum;

import java.util.List;
import javax.swing.JOptionPane;
import museumexhibition.domain.*;
import museumexhibition.service.CityService;
import museumexhibition.service.MuseumService;
import museumexhibition.service.impl.CityServiceImpl;
import museumexhibition.service.impl.MuseumServiceImpl;
import museumexhibition.validation.RequiredTextValidator;

/**
 *
 * @author Marko Milošević, pravnik
 */
public class MuseumNewForm extends javax.swing.JDialog {

    private MuseumService museumService;
    private CityService cityService;

    /**
     * Creates new form MuseumNewForm
     */
    public MuseumNewForm(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        museumService = new MuseumServiceImpl();
        cityService = new CityServiceImpl();
        prepareForm();
        setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnlName = new museumexhibition.ui.components.MyInputComponent();
        pnlAddress = new museumexhibition.ui.components.MyInputComponent();
        lblCity = new javax.swing.JLabel();
        comboCity = new javax.swing.JComboBox<>();
        btnCancel = new javax.swing.JButton();
        btnSave = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("New museum");

        lblCity.setText("City:");

        comboCity.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        btnCancel.setText("Cancel");
        btnCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelActionPerformed(evt);
            }
        });

        btnSave.setText("Save");
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(pnlName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(pnlAddress, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblCity, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(comboCity, javax.swing.GroupLayout.PREFERRED_SIZE, 326, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnCancel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnSave)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(pnlName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pnlAddress, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblCity)
                    .addComponent(comboCity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnCancel)
                    .addComponent(btnSave))
                .addGap(0, 21, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelActionPerformed
        dispose();
    }//GEN-LAST:event_btnCancelActionPerformed

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        try {
            String name = pnlName.getValue();
            String address = pnlAddress.getValue();
            City city = (City) comboCity.getSelectedItem();
            Museum museum = new Museum(null, name, address, city);
            int option = JOptionPane.showConfirmDialog(null, "Are you sure?", "Save museum?", JOptionPane.YES_NO_OPTION);
            if (option == JOptionPane.YES_OPTION) {
                museumService.save(museum);
                JOptionPane.showMessageDialog(this, "Museum is successfully saved!");
                pnlName.init("*Name:", "", "");
                pnlAddress.init("*Address:", "", "");
                int result = JOptionPane.showConfirmDialog(null, "Do you want to add another museum?", "Add new museum?", 0);
                if (result == 1) {
                    dispose();
                }
            }
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "Please update values", "Validation error!", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnSaveActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCancel;
    private javax.swing.JButton btnSave;
    private javax.swing.JComboBox<Object> comboCity;
    private javax.swing.JLabel lblCity;
    private museumexhibition.ui.components.MyInputComponent pnlAddress;
    private museumexhibition.ui.components.MyInputComponent pnlName;
    // End of variables declaration//GEN-END:variables

    private void prepareForm() {
        pnlName.init("*Name:", "", "");
        pnlName.setValidator(new RequiredTextValidator());
        pnlAddress.init("*Address:", "", "");
        pnlAddress.setValidator(new RequiredTextValidator());

        comboCity.removeAllItems();
        try {
            List<City> cities = cityService.getAll();
            for (City city : cities) {
                comboCity.addItem(city);
            }
        } catch (Exception ex) {
            ex.printStackTrace();
        }
    }
}

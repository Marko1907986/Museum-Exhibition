package museumexhibition.ui.form.exhibit;

import javax.swing.JOptionPane;
import museumexhibition.domain.Exhibit;
import museumexhibition.service.ExhibitService;
import museumexhibition.service.impl.ExhibitServiceImpl;
import museumexhibition.validation.RequiredTextValidator;

/**
 *
 * @author Marko Milošević, pravnik
 */
public class ExhibitNewForm extends javax.swing.JDialog {

    private ExhibitService exhibitService;

    /**
     * Creates new form ExhibitNewForm
     */
    public ExhibitNewForm(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        exhibitService = new ExhibitServiceImpl();
        prepareForm();
        setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnlName = new museumexhibition.ui.components.MyInputComponent();
        pnlDescription = new museumexhibition.ui.components.MyInputComponent();
        btnSave = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("New exhibit");

        btnSave.setText("Save");
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(pnlDescription, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSave)
                    .addComponent(pnlName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(11, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(pnlName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(pnlDescription, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnSave)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        try {
            String name = pnlName.getValue();
            String description = pnlDescription.getValue();
            Exhibit exhibit = new Exhibit(null, name, description);
            int result = JOptionPane.showConfirmDialog(null, "Are you sure?", "Save exhibit?", JOptionPane.YES_NO_OPTION);
            if (result == JOptionPane.YES_OPTION) {
                exhibitService.save(exhibit);
                JOptionPane.showMessageDialog(this, "Exhibit is successfully saved!");

                pnlName.init("*Name:", "", "");
                pnlDescription.init("*Description:", "", "");

                int option = JOptionPane.showConfirmDialog(null, "Do you want to add another exhibit?", "Add new exhibit?", 0);
                if (option == 1) {
                    dispose();
                }
            }
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "Please update values", "Validation error!", JOptionPane.ERROR_MESSAGE);
        }

    }//GEN-LAST:event_btnSaveActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnSave;
    private museumexhibition.ui.components.MyInputComponent pnlDescription;
    private museumexhibition.ui.components.MyInputComponent pnlName;
    // End of variables declaration//GEN-END:variables

    private void prepareForm() {
        pnlName.init("*Name:", "", "");
        pnlName.setValidator(new RequiredTextValidator());
        pnlDescription.init("*Description:", "", "");
        pnlDescription.setValidator(new RequiredTextValidator());
    }
}
